@using BlazorLogin.Shared.NavMenu
@using System.Security.Claims;
@using BlazorLogin.Service
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager
@inject AuthService AuthService
@inject SessionStateProvider SessionState
@inject ITranslator Translator
@inherits LayoutComponentBase
<AuthorizeView>
    <TelerikRootComponent>
        <CascadingValue IsFixed="true" Value="@Notification">
            <NavBar></NavBar>
            <div class="container-fluid">
                @Body
            </div>
        </CascadingValue>
    </TelerikRootComponent>

</AuthorizeView>
<TelerikNotification @ref="@Notification.Instance"
                     HorizontalPosition="@NotificationHorizontalPosition.Right"
                     VerticalPosition="@NotificationVerticalPosition.Top">
</TelerikNotification>



@code
{
    Notification Notification { get; set; } = new Notification();

    protected override async Task<Task>
    OnInitializedAsync()
    {
        var state = await authenticationStateProvider.GetAuthenticationStateAsync();
        if (!state.User.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/Login", true);
        }
        else
        {
            if (string.IsNullOrEmpty(SessionState.Company))
            {
                navigationManager.NavigateTo("/SetLocale", false);
            }
            else
            {
                Translator.SetLocale(SessionState.Company, SessionState.Locale);
                navigationManager.NavigateTo("/Index", false);
            }
        }
        return base.OnInitializedAsync();
    }

}

<style>
    .big-notification .k-notification-container .k-notification-wrap {
        width: 350px;
        height: 100px;
    }

    .big-notification {
        z-index: 1234;
    }
</style>







